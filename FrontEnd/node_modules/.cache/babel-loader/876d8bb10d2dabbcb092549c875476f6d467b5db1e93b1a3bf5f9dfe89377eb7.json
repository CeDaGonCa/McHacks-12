{"ast":null,"code":"var _jsxFileName = \"/Users/angel/mchacks-12/src/pages/PatientInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './Page.css'; // Import the CSS file for page styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientInfo = () => {\n  _s();\n  const location = useLocation();\n  const {\n    name\n  } = location.state || {\n    name: 'Unknown'\n  };\n  const [waitTime, setWaitTime] = useState(null);\n  const [patientsAhead, setPatientsAhead] = useState(null);\n  const [labTests, setLabTests] = useState([]);\n  useEffect(() => {\n    // Fetch wait time, patients ahead, and lab tests from the backend\n    // For now, we'll simulate fetching this information\n    const fetchPatientInfo = async () => {\n      // Simulate a backend call\n      const response = await new Promise(resolve => {\n        setTimeout(() => {\n          resolve({\n            waitTime: 30,\n            patientsAhead: 5,\n            labTests: [{\n              id: 1,\n              name: 'Blood Test',\n              status: 'Completed'\n            }, {\n              id: 2,\n              name: 'X-Ray',\n              status: 'Pending'\n            }]\n          });\n        }, 1000);\n      });\n      setWaitTime(response.waitTime);\n      setPatientsAhead(response.patientsAhead);\n      setLabTests(response.labTests);\n    };\n    fetchPatientInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patient Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", name, \". Here is your information.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), waitTime !== null && patientsAhead !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Possible Wait Time: \", waitTime, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Patients Ahead: \", patientsAhead]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading your information...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lab Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), labTests.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: labTests.map(test => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [test.name, \": \", test.status]\n      }, test.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No lab tests available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientInfo, \"roNTqNWmUyu4l7ihq2QITlzfTcE=\", false, function () {\n  return [useLocation];\n});\n_c = PatientInfo;\nexport default PatientInfo;\nvar _c;\n$RefreshReg$(_c, \"PatientInfo\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","PatientInfo","_s","location","name","state","waitTime","setWaitTime","patientsAhead","setPatientsAhead","labTests","setLabTests","fetchPatientInfo","response","Promise","resolve","setTimeout","id","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","test","_c","$RefreshReg$"],"sources":["/Users/angel/mchacks-12/src/pages/PatientInfo.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './Page.css'; // Import the CSS file for page styling\n\nconst PatientInfo = () => {\n    const location = useLocation();\n    const { name } = location.state || { name: 'Unknown' };\n    const [waitTime, setWaitTime] = useState(null);\n    const [patientsAhead, setPatientsAhead] = useState(null);\n    const [labTests, setLabTests] = useState([]);\n\n    useEffect(() => {\n        // Fetch wait time, patients ahead, and lab tests from the backend\n        // For now, we'll simulate fetching this information\n        const fetchPatientInfo = async () => {\n            // Simulate a backend call\n            const response = await new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve({\n                        waitTime: 30,\n                        patientsAhead: 5,\n                        labTests: [\n                            { id: 1, name: 'Blood Test', status: 'Completed' },\n                            { id: 2, name: 'X-Ray', status: 'Pending' }\n                        ]\n                    });\n                }, 1000);\n            });\n\n            setWaitTime(response.waitTime);\n            setPatientsAhead(response.patientsAhead);\n            setLabTests(response.labTests);\n        };\n\n        fetchPatientInfo();\n    }, []);\n\n    return (\n        <div className=\"page-content\">\n            <h1>Patient Information</h1>\n            <p>Welcome, {name}. Here is your information.</p>\n            {waitTime !== null && patientsAhead !== null ? (\n                <div>\n                    <p>Possible Wait Time: {waitTime} minutes</p>\n                    <p>Patients Ahead: {patientsAhead}</p>\n                </div>\n            ) : (\n                <p>Loading your information...</p>\n            )}\n            <h2>Lab Tests</h2>\n            {labTests.length > 0 ? (\n                <ul>\n                    {labTests.map(test => (\n                        <li key={test.id}>\n                            {test.name}: {test.status}\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No lab tests available.</p>\n            )}\n        </div>\n    );\n};\n\nexport default PatientInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}