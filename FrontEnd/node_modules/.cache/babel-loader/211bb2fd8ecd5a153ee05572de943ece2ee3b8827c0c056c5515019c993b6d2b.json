{"ast":null,"code":"var _jsxFileName = \"/Users/angel/mchacks-12/src/pages/NurseDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Page.css'; // Import the CSS file for page styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NurseDashboard = () => {\n  _s();\n  const [patientName, setPatientName] = useState('');\n  const [levelOfConcern, setLevelOfConcern] = useState(1);\n  const [visitDuration, setVisitDuration] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [currentAnswer, setCurrentAnswer] = useState('');\n  useEffect(() => {\n    // Fetch questions from the backend or a global state\n    // For now, we'll simulate fetching questions\n    const fetchedQuestions = [\n      // Example: { id: 1, text: 'What are the visiting hours?', answer: '' }\n    ];\n    setQuestions(fetchedQuestions);\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Add logic to handle the submission of new patient information\n    console.log('New patient submitted:', {\n      patientName,\n      levelOfConcern,\n      visitDuration\n    });\n    // Clear the form fields after submission\n    setPatientName('');\n    setLevelOfConcern(1);\n    setVisitDuration('');\n  };\n  const handleAnswerSubmit = (e, questionId) => {\n    e.preventDefault();\n    // Add logic to handle the submission of an answer\n    setQuestions(questions.map(q => q.id === questionId ? {\n      ...q,\n      answer: currentAnswer\n    } : q));\n    setCurrentAnswer('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Nurse Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to the nurse dashboard. Here you can manage patient information and other tasks.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Submit New Patient Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Patient Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: patientName,\n          onChange: e => setPatientName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Level of Concern (1-5):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"5\",\n          value: levelOfConcern,\n          onChange: e => setLevelOfConcern(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Estimated Doctor Visit Duration (minutes):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: visitDuration,\n          onChange: e => setVisitDuration(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Answer Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), questions.length > 0 ? questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleAnswerSubmit(e, question.id),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question.answer || currentAnswer,\n          onChange: e => setCurrentAnswer(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this), question.answer && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Answer: \", question.answer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 45\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(NurseDashboard, \"Tm2ZiSNY5PJ+zNA20muHYfJEdcc=\");\n_c = NurseDashboard;\nexport default NurseDashboard;\nvar _c;\n$RefreshReg$(_c, \"NurseDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NurseDashboard","_s","patientName","setPatientName","levelOfConcern","setLevelOfConcern","visitDuration","setVisitDuration","questions","setQuestions","currentAnswer","setCurrentAnswer","fetchedQuestions","handleSubmit","e","preventDefault","console","log","handleAnswerSubmit","questionId","map","q","id","answer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","min","max","length","question","text","_c","$RefreshReg$"],"sources":["/Users/angel/mchacks-12/src/pages/NurseDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Page.css'; // Import the CSS file for page styling\n\nconst NurseDashboard = () => {\n    const [patientName, setPatientName] = useState('');\n    const [levelOfConcern, setLevelOfConcern] = useState(1);\n    const [visitDuration, setVisitDuration] = useState('');\n    const [questions, setQuestions] = useState([]);\n    const [currentAnswer, setCurrentAnswer] = useState('');\n\n    useEffect(() => {\n        // Fetch questions from the backend or a global state\n        // For now, we'll simulate fetching questions\n        const fetchedQuestions = [\n            // Example: { id: 1, text: 'What are the visiting hours?', answer: '' }\n        ];\n        setQuestions(fetchedQuestions);\n    }, []);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Add logic to handle the submission of new patient information\n        console.log('New patient submitted:', { patientName, levelOfConcern, visitDuration });\n        // Clear the form fields after submission\n        setPatientName('');\n        setLevelOfConcern(1);\n        setVisitDuration('');\n    };\n\n    const handleAnswerSubmit = (e, questionId) => {\n        e.preventDefault();\n        // Add logic to handle the submission of an answer\n        setQuestions(questions.map(q => q.id === questionId ? { ...q, answer: currentAnswer } : q));\n        setCurrentAnswer('');\n    };\n\n    return (\n        <div className=\"page-content\">\n            <h1>Nurse Dashboard</h1>\n            <p>Welcome to the nurse dashboard. Here you can manage patient information and other tasks.</p>\n            \n            <h2>Submit New Patient Information</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Patient Name:</label>\n                    <input\n                        type=\"text\"\n                        value={patientName}\n                        onChange={(e) => setPatientName(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label>Level of Concern (1-5):</label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        max=\"5\"\n                        value={levelOfConcern}\n                        onChange={(e) => setLevelOfConcern(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label>Estimated Doctor Visit Duration (minutes):</label>\n                    <input\n                        type=\"number\"\n                        value={visitDuration}\n                        onChange={(e) => setVisitDuration(e.target.value)}\n                    />\n                </div>\n                <button type=\"submit\">Submit Patient</button>\n            </form>\n\n            <h2>Answer Questions</h2>\n            {questions.length > 0 ? (\n                questions.map(question => (\n                    <div key={question.id}>\n                        <p>{question.text}</p>\n                        <form onSubmit={(e) => handleAnswerSubmit(e, question.id)}>\n                            <input\n                                type=\"text\"\n                                value={question.answer || currentAnswer}\n                                onChange={(e) => setCurrentAnswer(e.target.value)}\n                            />\n                            <button type=\"submit\">Submit Answer</button>\n                        </form>\n                        {question.answer && <p>Answer: {question.answer}</p>}\n                    </div>\n                ))\n            ) : (\n                <p>No questions available.</p>\n            )}\n        </div>\n    );\n};\n\nexport default NurseDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}